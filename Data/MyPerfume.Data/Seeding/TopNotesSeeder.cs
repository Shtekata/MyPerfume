namespace MyPerfume.Data.Seeding
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;

    using Microsoft.Extensions.Configuration;
    using MyPerfume.Data.Models;

    public class TopNotesSeeder : ISeeder
    {
        public async Task SeedAsync(ApplicationDbContext dbContext, IServiceProvider serviceProvider, IConfiguration configuration)
        {
            if (dbContext.TopNotes.Any())
            {
                return;
            }

            var topNotes = new List<string>() { "Алдехиди", "Ананас", "Анасон", "Бадеми", "Бергамот", "Божур", "Босилек", "Българска роза", "Бърбън ванилия", "Бърбън пипер", "Бял пипер", "Бяла фрезия", "Ветивер", "Виолетови листа", "Гардения", "Глог", "Горчив портокал", "Градински чай", "Гранат", "Грейпфрут", "Гуава", "Див глог", "Жасмин", "Жълта мандарина", "Зелена мандарина", "Зелена", "ябълка", "Зелени нотки", "Зюмбюл", "Иланг-иланг", "Индийско орехче", "Кайсия", "Калабрийски бергамот", "Канела", "Кардамон", "Касис", "Касис листа", "Кафе", "Кедър", "Кипарис", "Копър", "Кориандър", "Крем жасмин", "Круша", "Кумкуат", "Къпина", "Лавандула", "Лайка", "Лайм", "Лакриц", "Леден акорд", "Лилия", "Лимон", "Лимон Амальфи", "Лимонова кора", "Листа от мента", "Личи", "Люляк", "Магнолия", "Малина", "Мандарина", "Мандариново-Портокалов", "Мащерка", "Мед", "Мента", "Минерали", "Морски нотки", "Нероли", "Нотки сурова сол", "Ориз", "Орхидея", "Османтус", "Пeтигрейн", "Палисандрово дърво", "Палисандър", "Папая", "Пармска теменужка", "Пасифлора", "Подправки", "Портокал", "Портокалов цвят", "Праскова", "Роза", "Роза центифолия", "Розов пипер", "Ром", "Секирче", "Сицилианска мандарина", "Сицилиански лимон", "Сицилиански портокал", "Танжерин", "Теменужка", "Тютюневи листа", "Хелионал", "Хибискус", "Цвете на индийско орехче", "Цветя", "Цитрус", "Цитрусови нотки", "Чай", "Червен жасмин", "Червен мандарин", "Червен портокал", "Червени ягоди", "Черен пипер", "Черен трюфел", "Черен хайвер", "Череша", "Шафран", "Юзу", "Ябълка", "Японско дърво" };

            foreach (var topNote in topNotes)
            {
                await dbContext.TopNotes.AddAsync(new TopNote { Name = topNote });
            }
        }
    }
}
